<box>
    <div if={ ! state.edit && state.box  }>
      <h2>üì¶ { state.box.name } <a class="edit-entry" onclick={ toggleEdit }>‚úèÔ∏è</a></h2> 
      <p>{ state.box.description }</p>
      <p if={ state.location }><b>Location: </b><a onclick={ registry.application.clickHandler } href="#location/{ state.location.id }">{ state.location.name }</a></p>
      <qr-code></qr-code>
    </div>
    <div if={ state.edit }>
      <box-form box={ state.box } onCancel={ toggleEdit }></box-form>
    </div>
    <items-list items={ state.items }></items-list>

  <script>
    import  './style.css'
    import BoxForm from '../../includes/box/form.riot'
    import QrCode from '../../includes/_helper/qr-code.riot'
    import ItemsList from '../../includes/item/list.riot'

    export default {
      components: {
        BoxForm,
        QrCode,
        ItemsList,
      },

      state: {
        box: false,
        location: false,
        items: false,
        edit: false,
      },

      toggleEdit() {
        this.update({
          edit: !this.state.edit
        })
      },

      setupListenter() {
        let target = this

        this.registry.eventBus.on('dataBoxLoadSuccess', function(locations) {
          target.loadBoxData()
        })

        this.registry.eventBus.on('dataItemLoadSuccess', function(locations) {
          target.loadItemData()
        })

        this.registry.eventBus.on('dataLocationLoadSuccess', function(locations) {
          target.loadLocationData()
        })

      },

      loadLocationData() {
        let safe = 1000
        while (!this.state.box) {
          safe--
          if (safe <= 0) break
        }
        this.update({
          location: this.registry.dataStore.locations.getLocationById(this.state.box.locationId)
        })
      },

      loadBoxData() {
        this.update({
          box: this.registry.dataStore.boxes.getBoxById(this.props.params[0])
        })
      },

      loadItemData() {
        this.update({
          items: this.registry.dataStore.items.getItemsByBoxId(this.props.params[0])
        })

      },

      onMounted() {
        this.setupListenter()
        this.loadBoxData()
        this.loadItemData()
        this.loadLocationData()
      }
    }
  </script>
</box>