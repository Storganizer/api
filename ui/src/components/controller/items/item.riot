<item>


<!--     <h2>üõ†Ô∏è { state.item.name }</h2>
    <p>{ state.item.description }</p>
    <p if={ state.box.id }><b>Box: </b><a onclick={ registry.application.clickHandler } href="#box/{ state.box.id }">{ state.box.name }</a></p>
    <p if={ state.location.id }><b>Location: </b><a onclick={ registry.application.clickHandler } href="#location/{ state.location.id }">{ state.location.name }</a></p>
    <qr-code></qr-code>
 -->



    <div if={ ! state.edit }>
      <h2>üõ†Ô∏è { state.item.name } <a class="edit-entry" onclick={ edit }>‚úèÔ∏è</a></h2> 
      <p>{ state.item.description }</p>
      <p if={ state.box.id }><b>Box: </b><a onclick={ registry.application.clickHandler } href="#box/{ state.box.id }">{ state.box.name }</a></p>
      <p if={ state.location.id }><b>Location: </b><a onclick={ registry.application.clickHandler } href="#location/{ state.location.id }">{ state.location.name }</a></p>
      <qr-code></qr-code>
    </div>
    <div if={ state.edit }>
      <item-form item={ state.item } onCancel={ edit }></box-form>
    </div>

  <script>
    import  './style.css'
    import ItemForm from '../../includes/item/form.riot'
    import QrCode from '../../includes/helper/qr-code.riot'

    export default {
      components: {
        ItemForm,
        QrCode,
      },
      state: {
        item: false,
        box: false,
        location: false,
        edit: false,
      },

      edit() {
        this.update({
          edit: !this.state.edit
        })
      },

      loadData() {
        let target = this
        if (window.dataStore) {

          // get item by id
          window.dataStore.items.getItemById(this.props.params[0], function(data) {
            let itemData = data
            // get parent box by id
            window.dataStore.boxes.getBoxById(itemData.boxId, function(data) {
              let boxData = data
              // get parent location by id
              window.dataStore.locations.getLocationById(boxData.locationId, function(data) {
                target.update({
                  item: itemData,
                  box: boxData,
                  location: data,

                })
              })

            })
          })
        }
      },

      onMounted() {
        this.loadData()
      }
    }
  </script>

</item>