<item-form class="no-print">
  <p if={ props.item }>
    <input placeholder="Item" name="item-name" id="item-name" type="text" value="{ props.item.name }"></input>
    <textarea placeholder="Description" name="item-description" id="item-description">{ props.item.description }</textarea>
    <input placeholder="Amount" name="item-amount" id="item-amount" value={ props.item.amount }></input>

    <label for="item-box-id">Box</label><select name="item-box-id" id="item-box-id">
      <option selected={ !props.item.boxId || props.item.boxId <= 0 } value="0" >unboxed</option>
      <option selected={ props.item.boxId == element.id } each={ element in state.boxes } value={ element.id }>{ element.name }</option>
    </select>

  </p>

  <div class="form-buttons" if={ props.item }>
    <button onclick={ saveEntry }>Save</button>
    <button class="button-outline" onclick={ props.onCancel }>Cancel</button>
    <button if={ props.item.id } class="button-delete" onclick={ deleteEntry }>Delete</button>
  </div>

  <script>

    export default {
      state: {
        boxes: false
      },

      setupListenter() {
        let target = this
        this.registry.eventBus.on('dataBoxLoadSuccess', function(locations) {
          target.loadBoxData()
        })
      },

      loadBoxData() {
        this.update({
            boxes: this.registry.dataStore.boxes.getBoxes()
        })
      },

      onMounted() {
        this.setupListenter()
        this.loadBoxData()
      },

      saveEntry(e) {
        let item = {
          id: this.props.item.id || 0,
          name: document.getElementById("item-name").value,
          description: document.getElementById("item-description").value,
          amount: document.getElementById("item-amount").value,
          boxId: parseInt(document.getElementById("item-box-id").value),
        }

        if (item.id > 0) {
          this.registry.dataStore.items.updateEntry(item)
          this.props.onCancel()
        } else {
          this.registry.dataStore.items.addEntry(item)
          this.props.onCancel()
        }
      },

      deleteEntry(e) {
        let redirectUrl  = '#box/' + document.getElementById("item-box-id").value
        this.registry.dataStore.items.deleteEntry(this.props.item)
        window.location.replace(redirectUrl)
        this.registry.application.render(redirectUrl)
      },
    }
  </script>

  <style>
    button {
      margin-right: 5px;
    }
  </style>

</item-form>
