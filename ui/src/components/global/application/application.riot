<application>
  <div if={ state.isLoggedIn }>
    <div class="header">
      <a href="/" class="logo"><img width="20px" src="./storganizer-logo.png" /> Storganizer</a>
      <input class="menu-btn" type="checkbox" id="menu-btn" />
      <label class="menu-icon" for="menu-btn"><span class="navicon"></span></label>
      <ul class="menu">
        <li><a href="#locations">Locations</a></li>
        <li><a href="#boxes">Boxes</a></li>
        <li><a href="#items">Items</a></li>
        <li><a href="#search">Search</a></li>
      </ul>
    </div>

    <div class="clearfix" />

    <div class="application-body container">
      <locations params={ state.controller.params } if={ canShowContainer('locations') }></locations>
      <location params={ state.controller.params } if={ canShowContainer('location') }></location>
      <boxes params={ state.controller.params } if={ canShowContainer('boxes') }></boxes>
      <box params={ state.controller.params } if={ canShowContainer('box') }></box>
      <items params={ state.controller.params } if={ canShowContainer('items') }></items>
      <item params={ state.controller.params } if={ canShowContainer('item') }></item>
      <search params={ state.controller.params } if={ canShowContainer('search') }></search>
    </div>
  </div>

  <div if={ !state.isLoggedIn } class="container">
    <login data-riot-component></login>
  </div>

  <script>
    import './style.css'
    import Login from '../login/login.riot'

    import Locations from '../../application/locations/locations.riot'
    import Location from '../../application/locations/location.riot'
    import Boxes from '../../application/boxes/boxes.riot'
    import Box from '../../application/boxes/box.riot'
    import Items from '../../application/items/items.riot'
    import Item from '../../application/items/item.riot'
    import Search from '../../application/search/search.riot'

    //this.initApplication = true
    function parseUrl(url = "localhost#locations") {
      let controllerParams = []
      let controller = 'locations'

      let urlParts = url.split('#')

      if (urlParts.length > 1) {
        controller = urlParts[1]
      }

      let controllerParts = controller.split('/')
      if (controllerParts.length > 1) {
        controller = controllerParts[0]
        controllerParams = controllerParts.splice(1, controllerParts.length)
      }

      return {
        name: controller,
        params: controllerParams
      }
    }

    const isLoggedIn = Login.exports.login()
    const controller = parseUrl(document.URL)

    export default {
      state: {
        controller: controller,
        isLoggedIn: isLoggedIn
      },

      components: {
        Login,
        Locations,
        Location,
        Boxes,
        Box,
        Items,
        Item,
        Search
      },

      getController(url) {
        return parseUrl(url)
      },

      initialize() {
        //riot.mount('application', Application)
        let target = this
        document.addEventListener("click", function(e){
          if (e.target.href) {
            target.update({
              controller: target.getController(e.target.href)
            })
          }
        })
      },

      onMounted() {
        this.initialize()
      },

      canShowContainer(controller) {
        return this.state.controller.name == controller
      }
    }
  </script>
</application>
